version: '2.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic github-events --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  postgres:
    image: "postgres:11.22-bullseye"
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres_data:/var/lib/postgresql/data

  apiServer:
    image: omribar/github-event-handler:1.0.0
    depends_on:
      postgres:
        condition: service_started
    ports:
      - '3000:3000'
    command:
      - /bin/sh
      - -c
      - go run apiServer/main.go
    environment:
      - DB_HOST=postgres
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=secret

  eventProcessor:
    image: omribar/github-event-handler:1.0.0
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      postgres:
        condition: service_started
    command:
      - /bin/sh
      - -c
      - go run eventProcessor/main.go
    environment:
      - KAFKA_BROKER=kafka-1:9092,kafka-2:9093,kafka-3:9094
      - DB_HOST=postgres
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=secret
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    env_file:
      - .env

  eventSampler:
    image: omribar/github-event-handler:1.0.0
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    command:
      - /bin/sh
      - -c
      - go run eventSampler/main.go
    environment:
      - KAFKA_BROKER=kafka-1:9092
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    env_file:
      - .env

volumes:
  postgres_data: